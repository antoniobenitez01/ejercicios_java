package passwd;

import java.io.*;
import java.util.HashSet;
import java.util.Scanner;

public class Main
{
    static void main(String[] args)
    {
        Scanner entrada = new Scanner(System.in);
        File directory = new File("passwd");

        int opcion;
        do
        {
            opcion = menu(entrada);
            switch(opcion)
            {
                case 1:
                    Password created = null;
                    do{
                        System.out.println("Introduzca la contraseña a añadir");
                        String password = entrada.nextLine();
                        System.out.println("Introduzca el contexto de la contraseña");
                        String context = entrada.nextLine();
                        try
                        {
                        	created = new Password(password,context);
                        }catch(IllegalArgumentException e)
                        {
                        	
                        }
                        if(created == null){ System.out.println("La contraseña no se ha creado.");}
                    }while(created == null);
                    writePasswordToFile(created, directory.getName());
                    System.out.println("Contraseña creada correctamente.");
                    break;
                case 2:
                    break;
                case 3:
                    File[] list = directory.listFiles();
                    if(list.length > 0)
                    {
                        HashSet<Password> passwordSet = readPasswordFile(directory);
                        if(passwordSet.size() > 0)
                        {
                            System.out.println("=== CONTRASEÑAS EN ARCHIVO ===");
                            for(Password p : passwordSet)
                            {
                                System.out.println(String.format("CONTEXTO: %s - CONTRASEÑA: %s",p.getContext(),p.getPassword()));
                            }
                        }else
                        {
                            System.out.println("No se ha encontrado ninguna contraseña.");
                        }
                    }else
                    {
                        System.out.println("No se encuentra ningún archivo en ese directorio.");
                    }
                    break;
                case 4:
                    System.out.println("Apagando programa ...");
                    break;
                default:
                    break;
            }
        }while(opcion != 4);
    }

    private static int menu(Scanner entrada)
    {
        System.out.println("=== MENÚ PRINCIPAL ===" +
                "\n1. AÑADIR CONTRASEÑA" +
                "\n2. BORRAR CONTRASEÑA" +
                "\n3. LISTAR CONTRASEÑAS" +
                "\n4. APAGAR PROGRAMA");
        int opcion;
        do{
            opcion = Herramientas.inputInt("Elija una opción", entrada);
            if(opcion < 1 || opcion > 4)
            {
                System.out.println("Opción introducida no correcta.");
            }
        }while(opcion < 1 || opcion > 4);
        return opcion;
    }

    private static HashSet<Password> readPasswordFile(File directory)
    {
        File[] files = directory.listFiles();
        HashSet<Password> list = new HashSet<Password>();
        for(int i = 0;i < files.length; i++)
        {
            try
            {
                ObjectInputStream objectInput = new ObjectInputStream(new FileInputStream(String.format("%s/%s",directory.getName(),files[i].getName())));
                Password password = (Password) objectInput.readObject();
                list.add(password);
            }catch(Exception e)
            {
                e.printStackTrace();
            }
        }
        return list;
    }

    private static void writePasswordToFile(Password password, String directory)
    {
        try
        {
            String filename = String.format("%s/%s.ser",directory,password.getContext());
            FileOutputStream output = new FileOutputStream(filename);
            ObjectOutputStream objectOutput = new ObjectOutputStream(output);
            objectOutput.writeObject(password);
            System.out.println(String.format("Written file to %s",filename));
            objectOutput.close();
        }catch(IOException e)
        {
            e.printStackTrace();
        }
    }
}
